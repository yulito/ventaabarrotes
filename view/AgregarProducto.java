/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CategoriaController;
import controller.ProductoController;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Categoria;
import model.Producto;

/**
 *
 * @author yulia
 */
public class AgregarProducto extends javax.swing.JFrame {

    /**
     * Creates new form AgregarProducto
     */
    
    private CategoriaController catCtrl;
    private List<Categoria> catList;
    private Object [] obj;
    private Map<String, Integer> catMap;
    private ProductoController ctrl;
    private Producto prod;
    public String value, stock, desc, nameImage; 
    public File imgFile;
    
    public AgregarProducto() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);        
        this.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        
        //limpiamos nombre y archivo de imagen apenas abrimos la ventana para evitar 
        //"contaminacion cruzada"
        nameImage = "";
        this.imgFile = null;
        
        //listar categoria
        this.catCtrl = new CategoriaController();
        this.catList = catCtrl.showCategory(0);
        catMap = new HashMap<>();
        DefaultComboBoxModel cbox =(DefaultComboBoxModel)cboxCat.getModel();
        //cbox.removeAllElements(); // Limpia los elementos anteriores, si los hay.
        for( Categoria cursor: this.catList ){
            //this.obj = new Object[]{cursor.getId_categoria(), cursor.getCategoria()};
            //cbox.addElement(this.obj[1]);
            //System.out.println(this.obj[0]+" - "+ this.obj[1]);
            cbox.addElement(cursor.getCategoria());
            //para obtener mas adelante el id de manera mas confiable usamos el map
            //ya que usamos el nombre de categoria como KEY y el value es el ID
            this.catMap.put(cursor.getCategoria(), cursor.getId_categoria());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        codText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        prodText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cboxMessure = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        valueText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        stockText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        descText = new javax.swing.JTextField();
        cboxCat = new javax.swing.JComboBox<>();
        btnAddCat = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        imageProd = new javax.swing.JLabel();
        routeText = new javax.swing.JLabel();
        btnAddProd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Agregar Producto");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("Código:");

        codText.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("Producto: *");

        prodText.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Unidad medida: *");

        cboxMessure.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cboxMessure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pieza/Unidad", "Kilo", "Litro", "Metro" }));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Valor $:");

        valueText.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        valueText.setText("0");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Stock:");

        stockText.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        stockText.setText("0.0");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Descuento %:");

        descText.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        descText.setText("0.0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(valueText))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(stockText))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(descText))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(valueText, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(stockText)
                    .addComponent(descText))
                .addContainerGap())
        );

        cboxCat.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cboxCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar Categoría *" }));

        btnAddCat.setText("Agregar Foto");
        btnAddCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCatActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        imageProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/preg.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        routeText.setText(".......................");

        btnAddProd.setBackground(new java.awt.Color(153, 204, 255));
        btnAddProd.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnAddProd.setText("Guardar Cambios");
        btnAddProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboxMessure, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(200, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(codText, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(prodText)
                                .addContainerGap())))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboxCat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAddCat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(routeText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(codText)
                        .addGap(3, 3, 3)))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prodText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboxMessure, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cboxCat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAddCat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(routeText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnAddProd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnAddProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProdActionPerformed
        //validar campos numericos
        String regex = "^[0-9.,]+$";
        ArrayList<String> mensaje = new ArrayList<String>();
        
        if (valueText.getText().matches(regex) ) {
            value = valueText.getText().replace(",", ".");                      
        }else if(valueText.getText().isEmpty()){ value = "0.0"; } 
            else { mensaje.add("El campo \"Valor\" solo admite datos numericos.\n");}
        if (stockText.getText().matches(regex) ) {
            stock = stockText.getText().replace(",", ".");                     
        } else if (stockText.getText().isEmpty()){ stock = "0.0"; } 
            else {mensaje.add("El campo \"Stock\" solo admite datos numericos.\n");}
        if (descText.getText().matches(regex) ) {
            desc = descText.getText().replace(",", ".");
        }else if (descText.getText().isEmpty()){ desc = "0.0"; } 
            else { mensaje.add("El campo \"Descuento\" solo admite datos numericos.\n");}        
        
        //validar campos obligatorios
        if (prodText.getText().isEmpty() || cboxCat.getSelectedItem()=="Seleccionar Categoría *"){
            mensaje.add("Falta completar campos obligatorios.\n");
        }else{
            //enviar todo al controlador
            ctrl = new ProductoController();
            prod = new Producto();
            //seteando los datos
            prod.setCodigo(codText.getText());
            prod.setProducto(prodText.getText());
            prod.setUnidad(cboxMessure.getSelectedItem().toString());
            prod.setStock(Double.parseDouble(stock));
            prod.setValor(Double.parseDouble(value));            
            prod.setDescuento(Double.parseDouble(desc));
            //prod.setImagen(routeImage.getText()); //lo enviaremos por parametro para modificarlo mas tarde
            //RECUERDA es recomendable usar map para almacenar los index en un combobox
            prod.setId_categoria(this.catMap.get(cboxCat.getSelectedItem()));  
            
            try {
                //if todo sale biem enviar mensaje y cambiar ventana
                if(ctrl.guardar(prod, this.imgFile, this.nameImage)){
                    //mensaje operacion exitosa.
                    JOptionPane.showMessageDialog(this, "Operación realizada correctamente!.");                    
                    //Volvemos a abrir ProductoVista
                    ProductoVista obj = new ProductoVista();
                    obj.setVisible(true);
                    this.dispose();
                }else{
                    JOptionPane.showMessageDialog(this, "Operación de inserción Fallida!.");
                }
            } catch (IOException ex) {
                Logger.getLogger(AgregarProducto.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Operación Fallida!. Verifique los datos enviados y conexión a DB.");
            }                        
        }
        //mensaje (por ahora temporal. Despues hay que ponerlo al final del ingreso)
        //enviar mensaje si es que existe
        if(!mensaje.isEmpty()){ 
            int i = 1;
            String cadenaCaracteres="";
            for(String cursor: mensaje){
                cadenaCaracteres += i+") "+cursor;
                i++;
            }
            //System.out.println(cadenaCaracteres);
            JOptionPane.showMessageDialog(this, cadenaCaracteres);
            
            /* diferencias entre obtener ID desde getSelectedIndex vs this.catMap.get
            System.out.println(cboxCat.getSelectedItem()+"\n - "
            + "selectedIndex: "+cboxCat.getSelectedIndex()+"\n - "
            + "catMap.get que es mas confiable: "+this.catMap.get(cboxCat.getSelectedItem())); */
        }              
    }//GEN-LAST:event_btnAddProdActionPerformed

    private void btnAddCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCatActionPerformed
        //abrimos ventana para seleccionar foto
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.PNG", "png", "jpg");
        fc.setFileFilter(filtro);
        
        if(fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            //creamos un ID unico para cada imagen y luego la concatenamos con el nombre de la imagen
            String IDUnique = UUID.randomUUID().toString();
            this.nameImage = IDUnique + fc.getSelectedFile().getName(); 
            
            //guardar file para enviar por parametro
            this.imgFile = fc.getSelectedFile();
            
            Image imagen = new ImageIcon(fc.getSelectedFile().getAbsolutePath()).getImage(); 
            //esto es para darle las dimensiones a la imagen segun las dimensiones del Label
            ImageIcon mIcon = new ImageIcon(imagen.getScaledInstance(imageProd.getWidth(), imageProd.getHeight(), 0));
            //agregamos la imagen al label icono
            imageProd.setIcon(mIcon); 
            //agregamos el nombre de la imagen al label
            if(this.nameImage.length() < 30){
                routeText.setText(this.nameImage);
            }else{ routeText.setText(this.nameImage.substring(0, 30)+"..."); }         
        }
    }//GEN-LAST:event_btnAddCatActionPerformed

    private void valueStringToNumber(String val){
        String valReplace = val.replace(",", ".");
        double op = Double.parseDouble(valReplace);      
        System.out.println(op);    
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCat;
    private javax.swing.JButton btnAddProd;
    private javax.swing.JComboBox<String> cboxCat;
    private javax.swing.JComboBox<String> cboxMessure;
    private javax.swing.JTextField codText;
    private javax.swing.JTextField descText;
    private javax.swing.JLabel imageProd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField prodText;
    private javax.swing.JLabel routeText;
    private javax.swing.JTextField stockText;
    private javax.swing.JTextField valueText;
    // End of variables declaration//GEN-END:variables
}
