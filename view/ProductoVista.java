/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CategoriaController;
import controller.ProductoController;
import helper.TextDocument;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.Categoria;
import model.Producto;

/**
 *
 * @author yulia
 */
public class ProductoVista extends javax.swing.JFrame {

    /**
     * Creates new form ProductoVista
     */
    private ProductoController prodCtrl;
    private Producto prod;
    private List<Producto> prodList;
    private CategoriaController catCtrl;
    private List<Categoria> catList;
    private Map<String, Integer> catMap;
    private CategoriaController catCtrlEdit;
    private List<Categoria> catListEdit;
    private Map<String, Integer> catMapEdit;
    private String selectCat, nameImage, value, stock, desc, oldPhoto;
    public File imgFile;
    
    public ProductoVista() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        //listamos productos
        this.prodCtrl = new ProductoController();
        this.ListProduct(1,1);

        // Inicializar los controladores y los mapas
        this.catCtrl = new CategoriaController();
        this.catList = catCtrl.showCategory(0);
        this.catMap = new HashMap<>(); // Inicialización correcta

        // **AQUÍ ESTÁ LA SOLUCIÓN:** Inicializa también catMapEdit
        this.catMapEdit = new HashMap<>(); // <<-- Añade esta línea

        DefaultComboBoxModel cbox =(DefaultComboBoxModel)cboxCatItem.getModel();
        for( Categoria cursor: this.catList ){
            cbox.addElement(cursor.getCategoria());
            this.catMap.put(cursor.getCategoria(), cursor.getId_categoria());
        }
    }
    
    private void ListProduct(int a, int b){         
        this.prodList = this.prodCtrl.listarProductos(a, b);
        //usamos la instancia de la tabla
        DefaultTableModel tb =(DefaultTableModel)tableProd.getModel();
        for(Producto cursor:this.prodList){      
            //ahora debemos meter la lista a la tabla "catListTable"   id cod prod value
            tb.addRow(new Object[]{cursor.getId_producto(),cursor.getCodigo(),cursor.getProducto(),cursor.getValor()});            
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnAddProduct = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cboxCatItem = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProd = new javax.swing.JTable();
        btnListCsv = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        idLabelProduct = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        codTextProduct = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        nameTextProduct = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        valueTextProduct = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        stockTextProduct = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        descTextProduct = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cboxmessure = new javax.swing.JComboBox<>();
        cboxCat = new javax.swing.JComboBox<>();
        btnSaveProduct = new javax.swing.JButton();
        nameImgText = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        changeImage = new javax.swing.JButton();
        imageText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Lista de Productos");

        btnAddProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btnagregar.png"))); // NOI18N
        btnAddProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddProductMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Agregar");

        cboxCatItem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cboxCatItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mostrar ultimas entradas" }));
        cboxCatItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cboxCatItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxCatItemActionPerformed(evt);
            }
        });

        tableProd.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tableProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Código", "Producto", "Valor "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProd.setRowHeight(30);
        tableProd.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tableProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProdMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProd);
        if (tableProd.getColumnModel().getColumnCount() > 0) {
            tableProd.getColumnModel().getColumn(0).setPreferredWidth(40);
            tableProd.getColumnModel().getColumn(2).setPreferredWidth(300);
        }

        btnListCsv.setBackground(new java.awt.Color(0, 102, 0));
        btnListCsv.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnListCsv.setForeground(new java.awt.Color(255, 255, 255));
        btnListCsv.setText("CSV");
        btnListCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListCsvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAddProduct)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnListCsv)
                        .addGap(18, 18, 18)
                        .addComponent(cboxCatItem, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(cboxCatItem)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnListCsv)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setText("Editar Producto");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setText("ID:");

        idLabelProduct.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        idLabelProduct.setText("----");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel6.setText("Código:");

        codTextProduct.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setText("Producto:");

        nameTextProduct.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setText("Valor $:");

        valueTextProduct.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setText("Stock:");

        stockTextProduct.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("Descuento %:");

        descTextProduct.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(valueTextProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stockTextProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descTextProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descTextProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(valueTextProduct)
                    .addComponent(stockTextProduct))
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setText("Unidad de Medida:");

        cboxmessure.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cboxmessure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pieza/Unidad", "Kilo", "Litro", "Metro" }));
        cboxmessure.setAutoscrolls(true);
        cboxmessure.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        cboxCat.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        btnSaveProduct.setBackground(new java.awt.Color(102, 153, 255));
        btnSaveProduct.setFont(new java.awt.Font("Arial", 2, 18)); // NOI18N
        btnSaveProduct.setText("Guardar Cambios");
        btnSaveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveProductActionPerformed(evt);
            }
        });

        nameImgText.setText("...");

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));

        changeImage.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        changeImage.setText("Cambiar imagen");
        changeImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(changeImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(imageText, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 57, Short.MAX_VALUE)
                        .addComponent(changeImage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(imageText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameTextProduct)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboxmessure, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(cboxCat, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(47, 47, 47)
                                        .addComponent(idLabelProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(codTextProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel7))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnSaveProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameImgText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idLabelProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(codTextProduct)
                        .addGap(3, 3, 3)))
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameTextProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboxmessure, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cboxCat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameImgText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSaveProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddProductMouseClicked
        AgregarProducto obj = new AgregarProducto();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAddProductMouseClicked

    private void cboxCatItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxCatItemActionPerformed
        cleanTable();
        if(cboxCatItem.getSelectedItem().toString()=="Mostrar ultimas entradas"){
            this.ListProduct(1,1);
        }else{
            this.ListProduct(2, this.catMap.get(cboxCatItem.getSelectedItem()));
        }        
    }//GEN-LAST:event_cboxCatItemActionPerformed

    private void tableProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProdMouseClicked
        //nos aseguramos de limpiar el archivo foto para dejarlo en nulo
        this.imgFile = null;
        // si hacemos dobleclic editamos
        if(evt.getClickCount()==2){
            
            //dejamos en vacio la foto vieja
            this.oldPhoto = "";
            this.nameImage = "";
            nameImgText.setText("");
            
            int Fila = tableProd.getSelectedRow();
            int id = (int)tableProd.getValueAt(Fila, 0);            
            ProductoController pctrl = new ProductoController();            
            
            //System.out.println("valor de id: "+id);
            List<Producto> prod = pctrl.mostrarProducto(id,"","");

            for(Producto cursor:prod){
                //pintamos los campos
                idLabelProduct.setText(String.valueOf(cursor.getId_producto()));
                codTextProduct.setText(cursor.getCodigo());
                nameTextProduct.setText(cursor.getProducto());
                cboxmessure.setSelectedItem(cursor.getUnidad()); //**
                valueTextProduct.setText(String.valueOf(cursor.getValor()));
                stockTextProduct.setText(String.valueOf(cursor.getStock()));
                descTextProduct.setText(String.valueOf(cursor.getDescuento()));                                
                
                //agregar imagen en la vista (por defecto o la que viene de la base de datos)
                if(cursor.getImagen() == null || cursor.getImagen().isEmpty()){ 
                    URL imageUrl = getClass().getResource("/img/preg.png");//ruta relativa             
                    Image imagen = new ImageIcon(imageUrl).getImage();
                    ImageIcon mIcon = new ImageIcon(imagen.getScaledInstance(imageText.getWidth(), imageText.getHeight(), 0));
                    //agregamos la imagen al label icono
                    imageText.setIcon(mIcon);
                    //dejamos en vacio la foto vieja
                    this.oldPhoto = "";
                    this.nameImage = "";
                }else{
                    //pintamos el label del nombre de la imagen
                    if(cursor.getImagen().length() < 30){
                    nameImgText.setText(cursor.getImagen());
                    }else{ nameImgText.setText(cursor.getImagen().substring(0, 30)+"..."); } 
                    //seteamos el valor de nombre de imagen vieja
                    this.oldPhoto = cursor.getImagen();
                    this.nameImage = "";
                    
                    // Obtener la ruta del directorio de trabajo del proyecto (Proyecto/)
                    String directorioRaiz = System.getProperty("user.dir");

                    // Construir la ruta completa al archivo de imagen en la carpeta storage
                    // Esto crea una ruta como "Proyecto/storage/imagen.png"
                    String rutaCompletaImagen = directorioRaiz + File.separator + cursor.getImagen(); 
                    
                    // Verificar si el archivo existe
                    File archivoImagen = new File(rutaCompletaImagen);

                    if (archivoImagen.exists()) {
                        // Cargar la imagen y redimensionarla
                        ImageIcon iconoOriginal = new ImageIcon(rutaCompletaImagen);
                        Image imagen = iconoOriginal.getImage();

                        // Asumiendo que tienes un JLabel llamado imageText
                        Image imagenRedimensionada = imagen.getScaledInstance(imageText.getWidth(), imageText.getHeight(), Image.SCALE_SMOOTH);
                        ImageIcon iconoFinal = new ImageIcon(imagenRedimensionada);

                        imageText.setIcon(iconoFinal);
                    } else {
                        // Si la imagen de storage no se encuentra, carga la imagen por defecto
                        // en el classpath (src/img/preg.png)
                        try {
                            Image imagenDefecto = new ImageIcon(getClass().getResource( "/img/preg.png")).getImage(); //ESTA ES LA LINEA 551
                            ImageIcon iconoDefecto = new ImageIcon(imagenDefecto.getScaledInstance(imageText.getWidth(), imageText.getHeight(), Image.SCALE_SMOOTH));
                            imageText.setIcon(iconoDefecto);
                            //dejamos en vacio la foto vieja
                            this.oldPhoto = "";
                            this.nameImage = "";
                        } catch (Exception e) {
                            System.err.println("No se pudo cargar la imagen por defecto.");
                        }
                    }
                }
                this.selectCat = cursor.getNamecat();
            }
            //preparamos los arreglos para el combobox de categoria
            this.catCtrlEdit = new CategoriaController();
            this.catListEdit = catCtrlEdit.showCategory(0);
            //catMapEdit = new HashMap<>();
            DefaultComboBoxModel cbox =(DefaultComboBoxModel)cboxCat.getModel();
            //limpiar combobox de categoria antes de pintar 
            cbox.removeAllElements();
            //***llenar el combobox de categoria***            
            cbox.addElement(this.selectCat);
            //System.out.println("valor item: "+cbox.getElementAt(0));
            for( Categoria cursor: this.catListEdit ){ 
                if(!cbox.getElementAt(0).equals(cursor.getCategoria())){
                    cbox.addElement(cursor.getCategoria());
                }                
                this.catMapEdit.put(cursor.getCategoria(), cursor.getId_categoria());
            }
        }
    }//GEN-LAST:event_tableProdMouseClicked

    private void changeImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeImageActionPerformed
        // abrimos ventana para seleccionar foto
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.PNG", "png", "jpg");
        fc.setFileFilter(filtro);
        
        if(fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            //creamos un ID unico para cada imagen y luego la concatenamos con el nombre de la imagen
            String IDUnique = UUID.randomUUID().toString();
            this.nameImage = IDUnique + fc.getSelectedFile().getName(); 
            
            //guardar file para enviar por parametro
            this.imgFile = fc.getSelectedFile();
            
            Image imagen = new ImageIcon(fc.getSelectedFile().getAbsolutePath()).getImage(); 
            //esto es para darle las dimensiones a la imagen segun las dimensiones del Label
            ImageIcon mIcon = new ImageIcon(imagen.getScaledInstance(imageText.getWidth(), imageText.getHeight(), 0));
            //agregamos la imagen al label icono
            imageText.setIcon(mIcon); 
            //agregamos el nombre de la imagen al label
            if(this.nameImage.length() < 30){
                nameImgText.setText(this.nameImage);
            }else{ nameImgText.setText(this.nameImage.substring(0, 30)+"..."); }         
        }
    }//GEN-LAST:event_changeImageActionPerformed

    private void btnSaveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveProductActionPerformed
        //validando campos numericos
        String regex = "^[0-9.,]+$";
        ArrayList<String> mensaje = new ArrayList<String>();
        
        if (valueTextProduct.getText().matches(regex) ) {
            value = valueTextProduct.getText().replace(",", ".");                      
        }else if(valueTextProduct.getText().isEmpty()){ value = "0.0"; } 
            else { mensaje.add("El campo \"Valor\" solo admite datos numericos.\n");}
        if (stockTextProduct.getText().matches(regex) ) {
            stock = stockTextProduct.getText().replace(",", ".");                     
        } else if (stockTextProduct.getText().isEmpty()){ stock = "0.0"; } 
            else {mensaje.add("El campo \"Stock\" solo admite datos numericos.\n");}
        if (descTextProduct.getText().matches(regex) ) {
            desc = descTextProduct.getText().replace(",", ".");
        }else if (descTextProduct.getText().isEmpty()){ desc = "0.0"; } 
            else { mensaje.add("El campo \"Descuento\" solo admite datos numericos.\n");}
        
        //validar campos obligatorios
        if (nameTextProduct.getText().isEmpty()){
            mensaje.add("Falta completar campos obligatorios.\n");
        }else{
            //enviar todo al controlador
            prodCtrl = new ProductoController();
            prod = new Producto();
            //seteando los datos
            prod.setId_producto(Integer.parseInt(idLabelProduct.getText()));
            prod.setCodigo(codTextProduct.getText());
            prod.setProducto(nameTextProduct.getText());
            prod.setUnidad(cboxmessure.getSelectedItem().toString());
            prod.setStock(Double.parseDouble(stock));
            prod.setValor(Double.parseDouble(value));            
            prod.setDescuento(Double.parseDouble(desc));            
            //RECUERDA es recomendable usar map para almacenar los index en un combobox
            prod.setId_categoria(this.catMapEdit.get(cboxCat.getSelectedItem().toString()));            
            
            try {
                //if todo sale biem enviar mensaje y cambiar ventana
                if(prodCtrl.editar(prod, this.imgFile ,this.nameImage, this.oldPhoto)){
                    //mensaje operacion exitosa.
                    JOptionPane.showMessageDialog(this, "Operación realizada correctamente!.");
                    //limpiamos y refrescamos todo
                    cleanAfterEdit();
                    
                }else{
                    JOptionPane.showMessageDialog(this, "Operación de inserción Fallida!.");
                    //formateamos el nombre de imagen "nuevo" ya que se mantendra el antiguo
                    //de lo contrario el valor del archivo anterior modificado persistira.
                    this.nameImage = "";
                }
            } catch (IOException ex) {
                Logger.getLogger(AgregarProducto.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Operación Fallida!. Verifique los datos enviados y conexión a DB.");
            }
        }
    }//GEN-LAST:event_btnSaveProductActionPerformed

    private void btnListCsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListCsvActionPerformed
        String cat = "";
        if(cboxCatItem.getSelectedItem()!="Mostrar ultimas entradas"){
            //guardamos valor de item categoria
            cat = cboxCatItem.getSelectedItem().toString();
            cat = cat.replace("/", "-");
            //obtenemos el modelo de la tabla
            DefaultTableModel tb =(DefaultTableModel)tableProd.getModel();
            if(tb.getRowCount() > 0){
                // enviamos arreglo de tabla y llamamos a el helper 
                TextDocument doc = new TextDocument();
                if(doc.createCSVListProduct(cat, tb)){
                    JOptionPane.showMessageDialog(this, "Se ha creado el CSV con exito.");
                }else{ JOptionPane.showMessageDialog(this, "ERROR en la creación de CSV."); }
            }else{ JOptionPane.showMessageDialog(this, "No hay productos en la lista."); }
        }else{
            JOptionPane.showMessageDialog(this, "Debes seleccionar alguna categoría.");
        }       
    }//GEN-LAST:event_btnListCsvActionPerformed

    private void cleanAfterEdit(){
        //llamamos funcion de limpiar tabla formulario
        cleanTable();
        //limpiamos campos
        idLabelProduct.setText("----");
        codTextProduct.setText("");
        nameTextProduct.setText("");
        valueTextProduct.setText("0");
        stockTextProduct.setText("0.0");
        descTextProduct.setText("0.0");   
        imageText.setIcon(null);
        nameImgText.setText("");
        //limpiamos y agregamos items de unidad
        cboxmessure.removeAllItems();
        cboxmessure.addItem("Pieza/Unidad");
        cboxmessure.addItem("Kilo");
        cboxmessure.addItem("Litro");
        cboxmessure.addItem("Metro");        
        //mostramos lista refrescada
        if(cboxCatItem.getSelectedItem().toString()=="Mostrar ultimas entradas"){
            this.ListProduct(1,1);
        }else{
            this.ListProduct(2, this.catMap.get(cboxCatItem.getSelectedItem()));
        }
        //llamamos la funcion limpiar y listar datos editados en el combobox categoria
        cboxCat.removeAllItems();        
        //limpiamos los nombres de fotos
        this.oldPhoto = "";
        this.nameImage = "";
        //limpiamos el archivo de foto
        this.imgFile = null;
    }
    
    private void cleanTable(){
        DefaultTableModel tb =(DefaultTableModel)tableProd.getModel();         
        for(int i=tb.getRowCount()-1;i>=0;i--) 
            tb.removeRow(i);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAddProduct;
    private javax.swing.JButton btnListCsv;
    private javax.swing.JButton btnSaveProduct;
    private javax.swing.JComboBox<String> cboxCat;
    private javax.swing.JComboBox<String> cboxCatItem;
    private javax.swing.JComboBox<String> cboxmessure;
    private javax.swing.JButton changeImage;
    private javax.swing.JTextField codTextProduct;
    private javax.swing.JTextField descTextProduct;
    private javax.swing.JLabel idLabelProduct;
    private javax.swing.JLabel imageText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameImgText;
    private javax.swing.JTextField nameTextProduct;
    private javax.swing.JTextField stockTextProduct;
    private javax.swing.JTable tableProd;
    private javax.swing.JTextField valueTextProduct;
    // End of variables declaration//GEN-END:variables
}
